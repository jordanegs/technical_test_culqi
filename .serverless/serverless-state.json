{
  "service": {
    "service": "technicalTestCulqi",
    "serviceObject": {
      "name": "technicalTestCulqi"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "apiGateway": {
        "shouldStartNameWithService": true
      },
      "environment": {
        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
        "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
        "DYNAMODB_ENDPOINT": "http://localhost:8000",
        "SQS_ENDPOINT": "https://sqs.us-east-1.amazonaws.com/957022602936/TestDataQueue"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeTable",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "sqs:SendMessage",
                "sqs:ReceiveMessage"
              ],
              "Resource": [
                "arn:aws:dynamodb:us-east-1:*:table/ResultsGameTable",
                "arn:aws:sqs:us-east-1:*:TestDataQueue",
                "arn:aws:events:us-east-1:*:rule/insertTestData"
              ]
            }
          ]
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "AppLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/technicalTestCulqi-dev-app"
            }
          },
          "QueueLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/technicalTestCulqi-dev-queue"
            }
          },
          "DynamoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/technicalTestCulqi-dev-dynamo"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "technicalTestCulqi",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/technicalTestCulqi-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/technicalTestCulqi-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetRecords",
                          "dynamodb:GetShardIterator",
                          "dynamodb:DescribeStream",
                          "dynamodb:ListStreams"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:us-east-1:957022602936:table/ResultsGameTable/stream/2023-04-13T06:31:38.826"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "technicalTestCulqi",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AppLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/technicalTestCulqi/dev/1681376148252-2023-04-13T08:55:48.252Z/technicalTestCulqi.zip"
              },
              "Handler": "dist/main.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "technicalTestCulqi-dev-app",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "SQS_ENDPOINT": "https://sqs.us-east-1.amazonaws.com/957022602936/TestDataQueue"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AppLogGroup"
            ]
          },
          "QueueLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/technicalTestCulqi/dev/1681376148252-2023-04-13T08:55:48.252Z/technicalTestCulqi.zip"
              },
              "Handler": "dist/queue.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "technicalTestCulqi-dev-queue",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "SQS_ENDPOINT": "https://sqs.us-east-1.amazonaws.com/957022602936/TestDataQueue"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "QueueLogGroup"
            ]
          },
          "DynamoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/technicalTestCulqi/dev/1681376148252-2023-04-13T08:55:48.252Z/technicalTestCulqi.zip"
              },
              "Handler": "dist/dynamo.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "technicalTestCulqi-dev-dynamo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                  "DYNAMODB_ENDPOINT": "http://localhost:8000",
                  "SQS_ENDPOINT": "https://sqs.us-east-1.amazonaws.com/957022602936/TestDataQueue"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DynamoLogGroup"
            ]
          },
          "AppLambdaVersionCcy3B2dcNkpzMXftRYugnhaaxauMCeNC4YmUXiFLM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppLambdaFunction"
              },
              "CodeSha256": "+phaen98gIS6iKtnvPdORAe7fyxt/dL46t0Q4MqSSko="
            }
          },
          "QueueLambdaVersionvMI0kCL3JOLoQrnoBhcWPXq07RclqP49ldQ1Bvo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "QueueLambdaFunction"
              },
              "CodeSha256": "+phaen98gIS6iKtnvPdORAe7fyxt/dL46t0Q4MqSSko="
            }
          },
          "DynamoLambdaVersionyJ7gqTgDRF2PmYuLhmbR62vwcyWNRyhFmSBZAwwns": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DynamoLambdaFunction"
              },
              "CodeSha256": "+phaen98gIS6iKtnvPdORAe7fyxt/dL46t0Q4MqSSko="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "technicalTestCulqi-dev",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceAnyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{any+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAnyVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,GET,HEAD,PATCH,POST,PUT'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAnyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAnyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAnyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AppLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1681376136187": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodAnyVarOptions",
              "ApiGatewayMethodAnyVarAny"
            ]
          },
          "AppLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DynamoEventSourceMappingDynamodbResultsGameTable": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "Enabled": true,
              "EventSourceArn": "arn:aws:dynamodb:us-east-1:957022602936:table/ResultsGameTable/stream/2023-04-13T06:31:38.826",
              "FunctionName": {
                "Fn::GetAtt": [
                  "DynamoLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "TRIM_HORIZON"
            }
          },
          "TodosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ResultsGameTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-technicalTestCulqi-dev-ServerlessDeploymentBucketName"
            }
          },
          "AppLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppLambdaVersionCcy3B2dcNkpzMXftRYugnhaaxauMCeNC4YmUXiFLM"
            },
            "Export": {
              "Name": "sls-technicalTestCulqi-dev-AppLambdaFunctionQualifiedArn"
            }
          },
          "QueueLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "QueueLambdaVersionvMI0kCL3JOLoQrnoBhcWPXq07RclqP49ldQ1Bvo"
            },
            "Export": {
              "Name": "sls-technicalTestCulqi-dev-QueueLambdaFunctionQualifiedArn"
            }
          },
          "DynamoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DynamoLambdaVersionyJ7gqTgDRF2PmYuLhmbR62vwcyWNRyhFmSBZAwwns"
            },
            "Export": {
              "Name": "sls-technicalTestCulqi-dev-DynamoLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-technicalTestCulqi-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "esbuild": {
        "bundle": true,
        "minify": false,
        "sourcemap": true,
        "target": "node18",
        "define": "require.resolve: undefined",
        "platform": "node",
        "concurrency": 10
      },
      "dynamodb": {
        "start": {
          "port": 8000,
          "inMemory": true,
          "migrate": true
        },
        "stages": "dev"
      }
    },
    "plugins": [
      "serverless-plugin-optimize",
      "serverless-offline",
      "serverless-dynamodb-local"
    ],
    "pluginsData": {},
    "functions": {
      "app": {
        "handler": "dist/main.handler",
        "events": [
          {
            "http": {
              "method": "any",
              "path": "{any+}",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "ANY"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "technicalTestCulqi-dev-app",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "AppLambdaVersionCcy3B2dcNkpzMXftRYugnhaaxauMCeNC4YmUXiFLM"
      },
      "queue": {
        "handler": "dist/queue.handler",
        "events": [],
        "name": "technicalTestCulqi-dev-queue",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "QueueLambdaVersionvMI0kCL3JOLoQrnoBhcWPXq07RclqP49ldQ1Bvo"
      },
      "dynamo": {
        "handler": "dist/dynamo.handler",
        "events": [
          {
            "stream": {
              "type": "dynamodb",
              "arn": "arn:aws:dynamodb:us-east-1:957022602936:table/ResultsGameTable/stream/2023-04-13T06:31:38.826"
            }
          }
        ],
        "name": "technicalTestCulqi-dev-dynamo",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "DynamoLambdaVersionyJ7gqTgDRF2PmYuLhmbR62vwcyWNRyhFmSBZAwwns"
      }
    },
    "resources": {
      "Resources": {
        "TodosTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ResultsGameTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "technicalTestCulqi",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "patterns": [
          "!README.md",
          "!.idea/**",
          "!src/**",
          "!test/**",
          "!e2e/**",
          "!.serverless/**",
          "!.serverless_plugins/**"
        ],
        "artifactsS3KeyDirname": "serverless/technicalTestCulqi/dev/code-artifacts",
        "artifact": "/Users/jordanegs/Development/technical_test_culqi/.serverless/technicalTestCulqi.zip",
        "artifactDirectoryName": "serverless/technicalTestCulqi/dev/1681376148252-2023-04-13T08:55:48.252Z"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/jordanegs/Development/technical_test_culqi/.serverless/technicalTestCulqi.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/technicalTestCulqi/dev/1681376148252-2023-04-13T08:55:48.252Z",
    "artifact": "technicalTestCulqi.zip"
  }
}